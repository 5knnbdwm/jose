name: Continuous Integration

on:
  push:
    paths-ignore:
      - "**.md"
      - "tools/**"
  pull_request:
    paths-ignore:
      - "**.md"
      - "tools/**"
  schedule:
    - cron: 0 11 * * 1-5
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      cache-key: ${{ steps.cache-key.outputs.value }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'npm'
      - name: Install dependencies
        run: npm clean-install
      - id: cache-key
        run: echo "value=dist-${{ hashFiles('src/**/*.ts') }}-${{ hashFiles('tsconfig/*.json') }}-${{ hashFiles('.github/workflows/*.yml') }}-${{ hashFiles('package-lock.json') }}" >> $GITHUB_OUTPUT
      - name: Cache dist
        uses: actions/cache@v3
        id: dist
        with:
          path: dist
          key: ${{ steps.cache-key.outputs.value }}
      - run: sed -i -e "s/-i ''/-i/g" package.json
      - run: sed -i -e "s/gcp/cp/g" package.json
      - name: Build
        run: npm run build-all
        if: ${{ steps.dist.outputs.cache-hit != 'true' }}
      - uses: actions/upload-artifact@v3
        with:
          name: dist
          path: dist
      - run: git reset HEAD --hard

  node:
    needs:
      - build
    strategy:
      fail-fast: false
      matrix:
        node-version:
          - 12
          - 14
          - 16
          - 18

    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
      - name: Install dependencies
        run: npm clean-install
      - name: Load cached dist
        uses: actions/cache@v3
        id: dist
        with:
          path: dist
          key: ${{ needs.build.outputs.cache-key }}
      - name: Abort if dist isn't cached
        if: ${{ steps.dist.outputs.cache-hit != 'true' }}
        uses: actions/github-script@v6
        with:
          script: |
              core.setFailed('dist cache hit failed')
      - run: find test -type f -name '*.mjs' -print0 | xargs -0 sed -i -e "s/await import(/require(/g"
        if: ${{ startsWith(matrix.node-version, '12') }}
      - name: Test with Node.js crypto module
        run: npm run test
      - name: Test with Node.js crypto module w/ CryptoKey
        run: npm run test-cryptokey
        if: ${{ !startsWith(matrix.node-version, '14') && !startsWith(matrix.node-version, '12') }}
      - name: Test with Node.js Web Cryptography API
        run: npm run test-webcrypto
        if: ${{ !startsWith(matrix.node-version, '14') && !startsWith(matrix.node-version, '12') }}
      - name: Test with Node.js Web API
        run: npm run test-webapi
        if: ${{ !startsWith(matrix.node-version, '14') && !startsWith(matrix.node-version, '12') }}

  deno:
    needs:
      - build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - uses: denoland/setup-deno@v1
        with:
          deno-version: v1.x
      - name: Load cached dist
        uses: actions/cache@v3
        id: dist
        with:
          path: dist
          key: ${{ needs.build.outputs.cache-key }}
      - name: Abort if dist isn't cached
        if: ${{ steps.dist.outputs.cache-hit != 'true' }}
        uses: actions/github-script@v6
        with:
          script: |
              core.setFailed('dist cache hit failed')
      - name: Test Deno Definitions
        run: deno check dist/deno/index.ts
      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'npm'
      - name: Install dependencies
        run: npm clean-install
      - name: Test Deno
        run: npm run tap:deno

  workers:
    needs:
      - build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'npm'
      - name: Install dependencies
        run: npm clean-install
      - name: Load cached dist
        uses: actions/cache@v3
        id: dist
        with:
          path: dist
          key: ${{ needs.build.outputs.cache-key }}
      - name: Abort if dist isn't cached
        if: ${{ steps.dist.outputs.cache-hit != 'true' }}
        uses: actions/github-script@v6
        with:
          script: |
              core.setFailed('dist cache hit failed')
      - name: Run Test Suite
        run: npm run tap:workers

  edge-runtime:
    needs:
      - build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'npm'
      - name: Install dependencies
        run: npm clean-install
      - name: Load cached dist
        uses: actions/cache@v3
        id: dist
        with:
          path: dist
          key: ${{ needs.build.outputs.cache-key }}
      - name: Abort if dist isn't cached
        if: ${{ steps.dist.outputs.cache-hit != 'true' }}
        uses: actions/github-script@v6
        with:
          script: |
              core.setFailed('dist cache hit failed')
      - name: Run Test Suite
        run: npm run tap:edge-runtime | tee edge-runtime.tap
      - id: parse
        uses: Coderlane/tap-action@d5de2302c571f90ccb2d2e9416eaca4efe3185dd
      - if: ${{ steps.parse.outputs.tap_fail != '0' }}
        uses: actions/github-script@v6
        with:
          script: |
              core.setFailed('npm run tap:edge-runtime failed')

  browsers:
    needs:
      - build
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        browser:
          - chrome:headless
          - firefox:headless
          - edge:headless
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'npm'
      - name: Install dependencies
        run: npm clean-install
      - name: Load cached dist
        uses: actions/cache@v3
        id: dist
        with:
          path: dist
          key: ${{ needs.build.outputs.cache-key }}
      - name: Abort if dist isn't cached
        if: ${{ steps.dist.outputs.cache-hit != 'true' }}
        uses: actions/github-script@v6
        with:
          script: |
              core.setFailed('dist cache hit failed')
      - name: Run Test Suite
        run: npm run tap:browsers
        env:
          BROWSER: ${{ matrix.browser }}

  electron:
    needs:
      - build
    strategy:
      fail-fast: false
      matrix:
        electron-version:
          - 12.0.0
          - latest
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'npm'
      - name: Install dependencies
        run: npm clean-install
      - name: Load cached dist
        uses: actions/cache@v3
        id: dist
        with:
          path: dist
          key: ${{ needs.build.outputs.cache-key }}
      - name: Abort if dist isn't cached
        if: ${{ steps.dist.outputs.cache-hit != 'true' }}
        uses: actions/github-script@v6
        with:
          script: |
              core.setFailed('dist cache hit failed')
      - name: Install Electron
        run: npm install --global xvfb-maybe electron@${{ matrix.electron-version }}
      - name: Test Electron crypto
        run: xvfb-maybe electron ./test/.electron

  prepare-release:
    needs:
      - browsers
      - deno
      - electron
      - node
      - workers
      - edge-runtime
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'push' && startsWith(github.ref, 'refs/tags') && github.repository == 'panva/jose' }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 2
      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'npm'
      - run: node tools/release-notes
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
