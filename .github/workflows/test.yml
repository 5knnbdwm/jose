name: Test

on:
  push:
    branches: [main]
    tags: ['v[0-9]+.[0-9]+.[0-9]+']
  pull_request:
    branches: [main]
  schedule:
    - cron: '11 11 * * 1'
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      cache-key: ${{ steps.cache-key.outputs.value }}
    steps:
      - name: Environment Information
        run: npx envinfo
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: lts/hydrogen # 18
          cache: 'npm'
      - run: npm clean-install
      - id: cache-key
        run: echo "value=dist-${{ hashFiles('src/**/*.ts', 'tsconfig/*.json', '.github/workflows/*.yml', 'package-lock.json') }}" >> $GITHUB_OUTPUT
      - name: Cache dist
        uses: actions/cache@v3
        id: dist
        with:
          path: dist
          key: ${{ steps.cache-key.outputs.value }}
      - name: Build
        run: npm run build-all
        if: ${{ steps.dist.outputs.cache-hit != 'true' }}
      - uses: actions/upload-artifact@v3
        with:
          name: dist
          path: dist
      - run: git reset HEAD --hard

  typings:
    needs:
      - build
    runs-on: ubuntu-latest
    steps:
      - name: Environment Information
        run: npx envinfo
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup node
        id: node
        uses: actions/setup-node@v3
        with:
          node-version: lts/hydrogen # 18
          cache: 'npm'
      - run: npm clean-install
      - name: Load cached dist
        uses: actions/cache@v3
        id: dist
        with:
          path: dist
          key: ${{ needs.build.outputs.cache-key }}
          fail-on-cache-miss: true
      - name: Check TypeScript type definitions
        run: npm run test:types

  node:
    needs:
      - build
    continue-on-error: ${{ !startsWith(matrix.node-version, 'lts') }}
    strategy:
      fail-fast: false
      matrix:
        node-version:
          - lts/fermium # 14
          - lts/gallium # 16
          - lts/hydrogen # 18
          - current
        suite:
          - tap:node
          - test
        include:
          - node-version: lts/erbium # 12
            suite: test

    runs-on: ubuntu-latest
    steps:
      - name: Environment Information
        run: npx envinfo
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup node
        id: node
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
      - run: npm install --global npm@8
        if: ${{ startsWith(steps.node.outputs.node-version, 'v12') || startsWith(steps.node.outputs.node-version, 'v14') }}
      - run: npm clean-install
      - name: Load cached dist
        uses: actions/cache@v3
        id: dist
        with:
          path: dist
          key: ${{ needs.build.outputs.cache-key }}
          fail-on-cache-miss: true
      - run: |
          find test -type f -name '*.mjs' -print0 | xargs -0 sed -i -e "s/await import(/require(/g"
          npm install --save-dev ava@4
        if: ${{ startsWith(steps.node.outputs.node-version, 'v12') && matrix.suite == 'test' }}
      - name: Run Test Suite
        run: npm run ${{ matrix.suite }}

  deno:
    needs:
      - build
    runs-on: ubuntu-latest
    steps:
      - name: Environment Information
        run: npx envinfo
      - name: Checkout
        uses: actions/checkout@v3
      - uses: denoland/setup-deno@v1
        with:
          deno-version: v1.x
      - name: Load cached dist
        uses: actions/cache@v3
        id: dist
        with:
          path: dist
          key: ${{ needs.build.outputs.cache-key }}
          fail-on-cache-miss: true
      - name: Test Deno Definitions
        run: deno check dist/deno/index.ts
      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: lts/hydrogen # 18
          cache: 'npm'
      - run: npm clean-install
      - name: Test Deno
        run: npm run tap:deno

  bun:
    needs:
      - build
    runs-on: ubuntu-latest
    continue-on-error: true
    steps:
      - name: Environment Information
        run: npx envinfo
      - name: Checkout
        uses: actions/checkout@v3
      - run: curl https://bun.sh/install | bash
      - name: Load cached dist
        uses: actions/cache@v3
        id: dist
        with:
          path: dist
          key: ${{ needs.build.outputs.cache-key }}
          fail-on-cache-miss: true
      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: lts/hydrogen # 18
          cache: 'npm'
      - run: npm clean-install
      - name: Test Bun
        run: npm run tap:bun

  workers:
    needs:
      - build
    runs-on: ubuntu-latest
    steps:
      - name: Environment Information
        run: npx envinfo
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: lts/hydrogen # 18
          cache: 'npm'
      - run: npm clean-install
      - run: npm install --global workerd
      - name: Load cached dist
        uses: actions/cache@v3
        id: dist
        with:
          path: dist
          key: ${{ needs.build.outputs.cache-key }}
          fail-on-cache-miss: true
      - name: Run Test Suite
        run: npm run tap:workers

  edge-runtime:
    needs:
      - build
    runs-on: ubuntu-latest
    steps:
      - name: Environment Information
        run: npx envinfo
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: lts/hydrogen # 18
          cache: 'npm'
      - run: npm clean-install
      - name: Load cached dist
        uses: actions/cache@v3
        id: dist
        with:
          path: dist
          key: ${{ needs.build.outputs.cache-key }}
          fail-on-cache-miss: true
      - name: Run Test Suite
        run: npm run tap:edge-runtime

  browsers:
    needs:
      - build
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        browser:
          - chrome:headless
          - firefox:headless
          - edge:headless
    steps:
      - name: Environment Information
        run: npx envinfo
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: lts/hydrogen # 18
          cache: 'npm'
      - run: npm clean-install
      - run: npm install --global testcafe@2
      - name: Load cached dist
        uses: actions/cache@v3
        id: dist
        with:
          path: dist
          key: ${{ needs.build.outputs.cache-key }}
          fail-on-cache-miss: true
      - name: Run Test Suite
        run: npm run tap:browsers
        env:
          BROWSER: ${{ matrix.browser }}

  electron:
    needs:
      - build
    runs-on: macos-latest
    steps:
      - name: Environment Information
        run: npx envinfo
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: lts/hydrogen # 18
          cache: 'npm'
      - run: npm clean-install
      - name: Load cached dist
        uses: actions/cache@v3
        id: dist
        with:
          path: dist
          key: ${{ needs.build.outputs.cache-key }}
          fail-on-cache-miss: true
      - name: Install Electron
        run: npm install --global electron
      - name: Run Test Suite
        run: npm run tap:electron

  prepare-release:
    needs:
      - browsers
      - bun
      - deno
      - edge-runtime
      - electron
      - node
      - typings
      - workers
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'push' && startsWith(github.ref, 'refs/tags') && github.repository == 'panva/jose' }}
    steps:
      - name: Environment Information
        run: npx envinfo
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 2
      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: lts/hydrogen # 18
          cache: 'npm'
      - run: node tools/release-notes
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
